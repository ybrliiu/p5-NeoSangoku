% layout 'default';

<style>

#country-list {
  width: 70%;
  border: 3px <%= $config->{color}{darkred} %> solid;
}

#country-list td {
  background-color: <%= $config->{color}{white} %>;
  border: 1px <%= $config->{color}{white} %>;
}

#country-list a {
  text-decoration: underline;
}

.sort-by-number:after {
  content: '↕';
  color: <%= $config->{color}{white} %>;
  position: relative;
  width: 0px;
  height: 0px;
  left: 3px;
  top: 0px;
}

.sorted-asc:after {
  content: '';
  position: relative;
  width: 0px;
  height: 0px;
  border-top: solid 4px #ffffff;
  border-right: solid 4px transparent;
  border-bottom: solid 4px transparent;
  border-left: solid 4px transparent;
  left: 3px;
  top: 11px;
}

.sorted-desc:after {
  content: '';
  position: relative;
  width: 0px;
  height: 0px;
  border-top: solid 4px transparent;
  border-right: solid 4px transparent;
  border-bottom: solid 4px #fff;
  border-left: solid 4px transparent;
  left: 3px;
  top: -11px;
}

</style>

<!-- ナビゲートボタン -->
<div id="zukei">
  <div id="botan" onClick='window.scrollTo(0,0);'>
    <div id="up_arrow"></div>
  </div>
</div>

<section>
<div class="centering">

  <h1 id="headline"><span>登録武将一覧</span></h1>

% # 1国表示
% my @countries = @$countries;
% if (@countries == 1) { 
  <a href="/outer/player-list">
    <h2>【全国武将一覧に戻る】</h2>
  </a>
% }
% # 全国表示
% else {
  <table id="country-list" class="tile-table">
    <tr><th><h2>国一覧</h2></th></tr>
    <tr>
      <td>
      % for my $country (@countries) {
        <strong>
          <a style="color: <%= $country->color %>" href="#<%= $country->name %>"><%= $country->name %></a> / 
        </strong>
      % }
        <br>
        <br>※各国のタイトル部分をクリックするとその国の全所属武将の情報が見れます。
      </td>
    </tr>
  </table>
% }

% for my $country (@countries) {
  % my @players = @{ $country->players($players_hash) };
  <table class="table-<%= $country->color %> width-70pc">
    <tr><th class="first" colspan="6">
      <a href="/outer/player-list/<%= $country->name %>" id="<%= $country->name %>">
        <h2><%= $country->name %></h2>
      </a>
    </th></tr>

    <tr>
      <th>君主</th>
      <td class="color"><%= $country->position($positions_hash)->king_name($players_hash) %></td>
      <th>宰相</th>
      <td class="color"><%= $country->position($positions_hash)->premier_name($players_hash) %></td>
      <th>軍師</th>
      <td class="color"><%= $country->position($positions_hash)->strategist_name($players_hash) %></td>
    </tr>

    <tr>
      <th>武将数</th>
      <td class="color"><%= @players %>名</td>
      <th>支配都市</th>
    % my @towns = @{ $country->towns($towns) };
      <td class="color" colspan="3"><%= @towns %>都市(<%= $_->name . ' ' for @towns %>)</td>
    </tr>

    <tr>
      <th>外交状況</th>
      <td class="color" colspan="5"></td>
    </tr>
  </table>

  <table class="sortable table-<%= $country->color %> width-70pc touch-top">
    
    <tr>
      <th></th>
      <th>名前</th>
      <th class="sort-by-number">武力</th>
      <th class="sort-by-number">知力</th>
      <th class="sort-by-number">統率力</th>
      <th class="sort-by-number">人望</th>
      <th>階級</th>
      <th>装備</th>
      <th>削除まで</th>
    </tr>

  % # 全国家表示で人数が10人より多い時
  % my $limit = @countries != 1 && @players > 10 ? 10 : $#players;
  % for (0 .. $limit) {
    % my $player = $players[$_];
    <tr>
      <td class="icon">
        <img class="icon" src="<%= $player->icon_path %>">
      </td>
      <td><%= $player->name %></td>
      <td><%= $player->force %></td>
      <td><%= $player->intellect %></td>
      <td><%= $player->leadership %></td>
      <td><%= $player->popular %></td>
      <td>Lv.<%= $player->lank %> <%= $player->lank_name %></td>
      <td>
        武器：<%= $player->weapon($weapons_hash)->name %>：威力：<%= $player->weapon($weapons_hash)->power %><br>
        防具：<%= $player->guard($guards_hash)->name %>：威力：<%= $player->guard($guards_hash)->power %><br>
        書物：<%= $player->book($books_hash)->name %>：威力：<%= $player->book($books_hash)->power %>
      </td>
      <td>削除まで<span class="blue"><%= $player->delete_until %></span>ターン</td>
    </tr>
  % }

  % # 全国家表示で人数が10人より多い時
  % if (@countries != 1 && $limit != $#players) { 
    <tr>
      <td colspan="6">
    % for ($limit + 1 .. $#players) {
      % my $player = $players[$_];
        <%= $player->name %>
        <span style="color: <%= $country->color %>;">
          (Lv.<%= $player->lank %><%= $player->lank_name %>)
        </span> 
    % }
      </td>
    </tr>
  % }

  </table>
% }

<script>

'use strict';

(function () {

  sangoku.namespace('sangoku.outer.playerList.SortTable');

  var ASC_CLASS = 'sorted-asc';
  var DESC_CLASS = 'sorted-desc';

  sangoku.outer.playerList.SortTable = function () {
    sangoku.base.apply(this, arguments);
    this.beforeTable = undefined;
    this.beforeTh = undefined;
  };

  var CLASS = sangoku.outer.playerList.SortTable;

  sangoku.inherit(sangoku.base, CLASS);

  var PROTOTYPE = CLASS.prototype;

  PROTOTYPE.switchOrderClass = function (th) {
    if (th.classList.contains(ASC_CLASS)) {
      th.classList.remove(ASC_CLASS);
      th.classList.add(DESC_CLASS);
    } else {
      th.classList.remove(DESC_CLASS);
      th.classList.add(ASC_CLASS);
    }
  };

  PROTOTYPE.addOrderClass = function (table, th) {
    if (
      this.beforeTh !== undefined &&
      this.beforeTable === table
    ) {
      this.beforeTh.classList.remove(ASC_CLASS);
      this.beforeTh.classList.remove(DESC_CLASS);
    } else if (
      this.beforeTable !== undefined &&
      this.beforeTable !== table
    ) {
      var asc = table.getElementsByClassName(ASC_CLASS)[0];
      if (asc !== undefined) {
        if (asc !== th) { asc.classList.remove(ASC_CLASS); }
      }
      var desc = table.getElementsByClassName(DESC_CLASS)[0];
      if (desc !== undefined) {
        if (desc !== th) { desc.classList.remove(DESC_CLASS); }
      }
    }
    this.switchOrderClass(th);
  };

  PROTOTYPE.setSortedColumn = function (table, th) {
    this.beforeTh === th ? this.switchOrderClass(th) : this.addOrderClass(table, th);
    this.beforeTh = th;
    this.beforeTable = table;
  };

  var compareColumnNumber = function (a, b, columnIndex) {
    var numA = Number(a.getElementsByTagName('td')[columnIndex].innerHTML);
    var numB = Number(b.getElementsByTagName('td')[columnIndex].innerHTML);
    return (numB > numA) ? 1 : (numB < numA) ? -1 : 0;
  };

  var replaceRows = function (table, rows) {
    var tbody = table.getElementsByTagName('tbody')[0];
    var headRow = tbody.getElementsByTagName('tr')[0];
    table.removeChild(tbody);

    var newTbody = document.createElement('tbody');
    newTbody.appendChild(headRow);
    rows.forEach(function (tr) {
      newTbody.appendChild(tr);
    });
    table.appendChild(newTbody);
  };
  
  PROTOTYPE.sortRows = function (table, columnIndex) {
    var self = this;
    var rowsOrigin = table.getElementsByTagName('tr');
    var rows = [].slice.call(rowsOrigin);
    var headRow = rows.shift();
    var isAsc = headRow.getElementsByTagName('th')[columnIndex].classList.contains(ASC_CLASS);
    rows.sort(function (a, b) {
      var result = compareColumnNumber(a, b, columnIndex);
      return isAsc ? result : result * -1;
    });
    replaceRows(table, rows);
  };

  PROTOTYPE.registFunctions = function () {
    var self = this;

    Array.prototype.forEach.call(document.getElementsByClassName('sortable'), function (table) {
      Array.prototype.forEach.call(table.getElementsByTagName('th'), function (th, index) {
        if (th.classList.contains('sort-by-number')) {
          th.addEventListener(self.eventType('click'), function (eve) {
            self.setSortedColumn(table, th);
            self.sortRows(table, index);
          });
        }
      });
    });

  };

}());

(function () {

  var c = new sangoku.outer.playerList.SortTable();
  c.registFunctions();

}());

</script>

</div>
</section>
